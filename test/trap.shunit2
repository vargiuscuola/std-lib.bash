#!/bin/bash

source "./package.sh"
#package.load "github.com/vargiuscuola/std-lib.bash"
source "./module.sh"
module.import "trap"
module.import "/opt/stub.sh/stub.sh"

test_trap() {
	local stdout
	declare -g VAR=
	
	# add HANDLER1
	trap_has-handler? HANDLER1 USR1				;	assertFalse		trap.1.1		$?
	stdout="$( trap_show-handlers )"			;	assertEquals	trap.1.2		""			"$stdout"
	trap_add-handler HANDLER1 "VAR=x" USR1		;	assertTrue		trap.1.3		$?
	trap_has-handler? HANDLER1 USR1				;	assertTrue		trap.1.4		$?
	stdout="$( trap_show-handlers )"			;	assertEquals	trap.1.5		1			"$( <<<"$stdout" wc -l )"
													assertEquals	trap.1.6		1			"$( <<<"$stdout" awk -F$'\t' '$3 == "HANDLER1" { print }' | wc -l )"
	trap_add-handler HANDLER1 "" USR1			;	assertFalse		trap.1.7		$?
	trap_has-handler? HANDLER1 USR1				;	assertTrue		trap.1.8		$?
													assertEquals	trap.1.9		""			"$VAR"
	kill -USR1 $BASHPID							;	assertEquals	trap.1.10		"x"			"$VAR"
	
	# add HANDLER2
	trap_add-handler HANDLER2 "VAR=y" USR1		;	assertTrue		trap.2.1		$?
	trap_has-handler? HANDLER1 USR1				;	assertTrue		trap.2.2		$?
	trap_has-handler? HANDLER2 USR1				;	assertTrue		trap.2.3		$?
	stdout="$( trap_show-handlers )"			;	assertEquals	trap.2.4		2			"$( <<<"$stdout" wc -l )"
													assertEquals	trap.2.5		1			"$( <<<"$stdout" awk -F$'\t' '$3 == "HANDLER1" { print }' | wc -l )"
													assertEquals	trap.2.6		1			"$( <<<"$stdout" awk -F$'\t' '$3 == "HANDLER2" { print }' | wc -l )"
	kill -USR1 $BASHPID							;	assertEquals	trap.2.7		"y"			"$VAR"

	# remove HANDLER2
	trap_remove-handler HANDLER2 USR1			;	assertTrue		trap.3.1		$?
	stdout="$( trap_show-handlers )"			;	assertEquals	trap.3.2		1			"$( <<<"$stdout" wc -l )"
													assertEquals	trap.3.3		1			"$( <<<"$stdout" awk -F$'\t' '$3 == "HANDLER1" { print }' | wc -l )"
	trap_has-handler? HANDLER2 USR1				;	assertFalse		trap.3.4		$?
	
	# step trace
	trap_step-trace-add func1
	stdout="$( trap_step-trace-list )"			;	assertEquals	trap.4.1		"step-into|func1"		"$stdout"
	trap_step-trace-add func2
	stdout="$( trap_step-trace-list )"			;	assertEquals	trap.4.2		2						"$( <<<"$stdout" wc -l )"
	trap_step-trace-add --step-over func3 func4 --step-into func5
	stdout="$( trap_step-trace-list )"			;	assertEquals	trap.4.3		3						"$( <<<"$stdout" awk -F'|' '$1 == "step-into" { print }' | wc -l )"
													assertEquals	trap.4.4		2						"$( <<<"$stdout" awk -F'|' '$1 == "step-over" { print }' | wc -l )"
	trap_step-trace-remove func5
	stdout="$( trap_step-trace-list )"			;	assertEquals	trap.4.5		2						"$( <<<"$stdout" awk -F'|' '$1 == "step-into" { print }' | wc -l )"
													assertEquals	trap.4.6		2						"$( <<<"$stdout" awk -F'|' '$1 == "step-over" { print }' | wc -l )"
	trap_step-trace-remove --step-into func1 func2 --step-over func3
	stdout="$( trap_step-trace-list )"			;	assertEquals	trap.4.7		0						"$( <<<"$stdout" awk -F'|' '$1 == "step-into" { print }' | wc -l )"
													assertEquals	trap.4.8		1						"$( <<<"$stdout" awk -F'|' '$1 == "step-over" { print }' | wc -l )"
	trap_step-trace-add --step-over func3 func4 --step-into func5
	stdout="$( trap_step-trace-list )"			;	assertEquals	trap.4.9		1						"$( <<<"$stdout" awk -F'|' '$1 == "step-into" { print }' | wc -l )"
													assertEquals	trap.4.10		2						"$( <<<"$stdout" awk -F'|' '$1 == "step-over" { print }' | wc -l )"
	trap_step-trace-reset
	stdout="$( trap_step-trace-list )"			;	assertEquals	trap.4.11		0						"$( <<<"$stdout" awk -F'|' '$1 == "step-into" { print }' | wc -l )"
													assertEquals	trap.4.12		0						"$( <<<"$stdout" awk -F'|' '$1 == "step-over" { print }' | wc -l )"
}


